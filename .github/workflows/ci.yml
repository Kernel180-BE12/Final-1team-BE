name: CI

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write
  security-events: write
  checks: write
  pull-requests: write

jobs:
  spotless-check:
    name: Lint Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 24
        uses: actions/setup-java@v4
        with:
          java-version: '24'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew
        working-directory: .

      - name: Run Spotless Check
        run: ./gradlew spotlessCheck
        working-directory: .

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: spotless-check
    strategy:
      matrix:
        java-version: ['24']

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: '${{ matrix.java-version }}'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew
        working-directory: .

      - name: Run Gradle Build (no tests)
        run: ./gradlew build -x test
        working-directory: .

      - name: Run Tests
        run: ./gradlew test
        working-directory: .

      - name: Upload build artifacts
        if: matrix.java-version == '24' && github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: spotless-check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner (source & deps)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          format: sarif
          output: trivy-results.sarif

  docker:
    name: Build Spring Boot Docker Image and push to registry
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs:
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts (JAR)
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set repo lowercase
        run: echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .                                # ✅ 빌드 컨텍스트: 저장소 루트
          file: ./docker/production/Dockerfile 
          push: true
          tags: |
            ghcr.io/${{ env.REPO_LC }}/user-service:latest
            ghcr.io/${{ env.REPO_LC }}/user-service:${{ github.sha }}

      - name: Analyze image layers
        run: |
          echo "=== Image Layer Analysis ==="
          docker history ghcr.io/${{ env.REPO_LC }}/user-service:${{ github.ref_name }} --human --no-trunc
